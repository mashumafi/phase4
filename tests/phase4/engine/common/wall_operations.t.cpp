#include <phase4/engine/common/wall_operations.h>

#include <phase4/engine/common/field_index.h>
#include <phase4/engine/common/square.h>

#include <doctest/doctest.h>

TEST_CASE("WallOperations slide from") {
	using namespace phase4::engine::common;

	CHECK(WallOperations::SLIDE_FROM[Square::H1] == 0b00000000'00000000'00000000'00000000'00000000'00000000'00000011'00000011);
	CHECK(WallOperations::SLIDE_FROM[Square::G1] == 0b00000000'00000000'00000000'00000000'00000000'00000000'00000011'00000011);
	CHECK(WallOperations::SLIDE_FROM[Square::F1] == 0b00000000'00000000'00000000'00000000'00000000'00000000'00001100'00001100);
	CHECK(WallOperations::SLIDE_FROM[Square::D1] == 0b00000000'00000000'00000000'00000000'00000000'00000000'00110000'00110000);
	CHECK(WallOperations::SLIDE_FROM[Square::B1] == 0b00000000'00000000'00000000'00000000'00000000'00000000'11000000'11000000);

	CHECK(WallOperations::SLIDE_FROM[Square::H2] == 0b00000000'00000000'00000000'00000000'00000000'00000000'00000011'00000011);
	CHECK(WallOperations::SLIDE_FROM[Square::G2] == 0b00000000'00000000'00000000'00000000'00000000'00000000'00000011'00000011);
	CHECK(WallOperations::SLIDE_FROM[Square::E2] == 0b00000000'00000000'00000000'00000000'00000000'00000000'00001100'00001100);
	CHECK(WallOperations::SLIDE_FROM[Square::C2] == 0b00000000'00000000'00000000'00000000'00000000'00000000'00110000'00110000);
	CHECK(WallOperations::SLIDE_FROM[Square::A2] == 0b00000000'00000000'00000000'00000000'00000000'00000000'11000000'11000000);

	CHECK(WallOperations::SLIDE_FROM[Square::G3] == 0b00000000'00000000'00000000'00000000'00000011'00000011'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::E3] == 0b00000000'00000000'00000000'00000000'00001100'00001100'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::C3] == 0b00000000'00000000'00000000'00000000'00110000'00110000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::A3] == 0b00000000'00000000'00000000'00000000'11000000'11000000'00000000'00000000);

	CHECK(WallOperations::SLIDE_FROM[Square::H4] == 0b00000000'00000000'00000000'00000000'00000011'00000011'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::F4] == 0b00000000'00000000'00000000'00000000'00001100'00001100'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::D4] == 0b00000000'00000000'00000000'00000000'00110000'00110000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::B4] == 0b00000000'00000000'00000000'00000000'11000000'11000000'00000000'00000000);

	CHECK(WallOperations::SLIDE_FROM[Square::G5] == 0b00000000'00000000'00000011'00000011'00000000'00000000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::E5] == 0b00000000'00000000'00001100'00001100'00000000'00000000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::C5] == 0b00000000'00000000'00110000'00110000'00000000'00000000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::A5] == 0b00000000'00000000'11000000'11000000'00000000'00000000'00000000'00000000);

	CHECK(WallOperations::SLIDE_FROM[Square::H6] == 0b00000000'00000000'00000011'00000011'00000000'00000000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::F6] == 0b00000000'00000000'00001100'00001100'00000000'00000000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::D6] == 0b00000000'00000000'00110000'00110000'00000000'00000000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::B6] == 0b00000000'00000000'11000000'11000000'00000000'00000000'00000000'00000000);

	CHECK(WallOperations::SLIDE_FROM[Square::G7] == 0b00000011'00000011'00000000'00000000'00000000'00000000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::E7] == 0b00001100'00001100'00000000'00000000'00000000'00000000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::C7] == 0b00110000'00110000'00000000'00000000'00000000'00000000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::A7] == 0b11000000'11000000'00000000'00000000'00000000'00000000'00000000'00000000);

	CHECK(WallOperations::SLIDE_FROM[Square::H8] == 0b00000011'00000011'00000000'00000000'00000000'00000000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::F8] == 0b00001100'00001100'00000000'00000000'00000000'00000000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::D8] == 0b00110000'00110000'00000000'00000000'00000000'00000000'00000000'00000000);
	CHECK(WallOperations::SLIDE_FROM[Square::B8] == 0b11000000'11000000'00000000'00000000'00000000'00000000'00000000'00000000);
}

TEST_CASE("WallOperations slide to") {
	using namespace phase4::engine::common;

	WallOperations::populateSlideToBB();

	//                             WALLS       LANDING
	CHECK(WallOperations::SLIDE_TO[Square::H1][Square::G3] == 0b00000000'00000000'00000000'00000000'00000011'00000011'00000000'00000000);
	CHECK(WallOperations::SLIDE_TO[Square::H1][Square::H3] == 0b00000000'00000000'00000000'00000000'00000011'00000011'00000000'00000000);
	CHECK(WallOperations::SLIDE_TO[Square::H2][Square::F2] == 0b00000000'00000000'00000000'00000000'00000000'00000000'00001100'00001100);
	CHECK(WallOperations::SLIDE_TO[Square::H2][Square::F1] == 0b00000000'00000000'00000000'00000000'00000000'00000000'00001100'00001100);
	CHECK(WallOperations::SLIDE_TO[Square::G2][Square::G1] == 0b00000000'00000000'00000000'00000000'00000000'00000000'00000011'00000011);
}

TEST_CASE("WallOperations slide direction") {
	using namespace phase4::engine::common;

	//                              WALLS       LANDING
	CHECK(WallOperations::SLIDE_DIR[Square::H1][Square::G3] == FieldIndex(0, 2));
	CHECK(WallOperations::SLIDE_DIR[Square::H2][Square::F2] == FieldIndex(2, 0));
	CHECK(WallOperations::SLIDE_DIR[Square::G2][Square::G1] == FieldIndex(0, 0));
}

TEST_CASE("WallOperations slide square") {
	using namespace phase4::engine::common;

	//                                 WALLS       LANDING
	CHECK(WallOperations::SLIDE_SQUARE[Square::H1][Square::G3] == Square::G1);
	CHECK(WallOperations::SLIDE_SQUARE[Square::H2][Square::F2] == Square::H2);
	CHECK(WallOperations::SLIDE_SQUARE[Square::G2][Square::G1] == Square::G1);
}
